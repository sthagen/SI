---
#
# clang-format v12.0.0
#
Checks:
'-*,
    #TBD llvm-header-guard,
    bugprone-*,
    cert-*,
    clang-analyzer-*,
    -clang-analyzer-cplusplus.Move,
    cppcoreguidelines-*,
    -cppcoreguidelines-macro-usage,
    concurrency-*,
    #MAYBE google-*,
    hicpp-*,
    -hicpp-explicit-conversions,
    misc-*,
    -misc-const-correctness,
    -misc-include-cleaner,
    modernize-*,
    -modernize-type-traits,
    -modernize-use-nodiscard,
    -modernize-use-trailing-return-type,
    performance-*,
    portability-*,
    readability-*,
    -readability-identifier-naming,
    -readability-identifier-length,
    -readability-simplify-boolean-expr,
    -readability-string-compare,
    -*-magic-numbers,
    -*-narrowing-conversions,
    -*-uppercase-literal-suffix,
'

HeaderFilterRegex: '.*'
WarningsAsErrors: 'clang*'
FormatStyle:     google
UseColor:        false

#MAYBE: ... example only
CheckOptions:
  - { key: readability-identifier-naming.NamespaceCase,             value: CamelCase  }
  - { key: readability-identifier-naming.ClassCase,                 value: CamelCase  }
  - { key: readability-identifier-naming.MemberCase,                value: camelBack  }
  - { key: readability-identifier-naming.MemberPrefix,              value: m_         }
  - { key: readability-identifier-naming.StructCase,                value: lower_case }
  - { key: readability-identifier-naming.UnionCase,                 value: lower_case }
  - { key: readability-identifier-naming.TypedefCase,               value: lower_case }
  - { key: readability-identifier-naming.TypedefSuffix,             value: _type      }
  - { key: readability-identifier-naming.FunctionCase,              value: camelBack  }
  - { key: readability-identifier-naming.EnumCase,                  value: CamelCase  }
  - { key: readability-identifier-naming.ConstexprFunctionCase,     value: CamelCase  }
  - { key: readability-identifier-naming.ConstexprMethodCase,       value: CamelCase  }
  - { key: readability-identifier-naming.ConstexprVariableCase,     value: CamelCase  }
  - { key: readability-identifier-naming.ClassConstantCase,         value: UPPER_CASE }
  - { key: readability-identifier-naming.EnumConstantCase,          value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantCase,        value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantPointerCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.LocalConstantPointerCase,  value: UPPER_CASE }
  - { key: readability-identifier-naming.ScopedEnumConstantCase,    value: UPPER_CASE }
  - { key: readability-identifier-naming.StaticConstantCase,        value: UPPER_CASE }
...
